<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--这里的namespace 对应 UserDaoMapper 类-->
<mapper namespace="com.xeon.dao.UserDaoMapper">
    <!--开启二级缓存 对应的数据需要实现Serializable接口-->
    <cache/>


    <!--用来解决实体类字段和数据库字段不一致的问题  通过下面做匹配-->
    <resultMap id="userMap" type="User">
        <!--        <id column="id" property="id"></id>-->
        <result column="org_id" property="orgId"/>
        <result column="default_company_code" property="defaultCompanyCode"/>
    </resultMap>

    <select id="getUsers" resultMap="userMap">
        select *
        from user;
    </select>


    <select id="getUser" resultType="User" parameterType="User">
        select *
        from user

        <!--动态sql-->
        <where>
            <if test="id!=null">
                id=#{id}
            </if>

            <if test="gid!=null">
                and gid=#{gid}
            </if>
        </where>
    </select>
    <select id="getUsersLike" resultType="User">
        select *
        from user
        where name like #{value}
    </select>
    <select id="getUserByName" resultType="com.xeon.pojo.User">
        select *
        from user
        where name = #{name}
    </select>


    <insert id="addUser" parameterType="User">
        insert into user(gid, name, default_company_code, org_id)
        values (#{gid}, #{name}, #{defaultCompanyCode}, #{orgId})
    </insert>

    <update id="updateUser" parameterType="User">
        update user
        set gid=#{gid},
            name=#{name},
            default_company_code=#{default_company_code},
            org_id=#{org_id}
        where id = #{id}
    </update>

    <delete id="deleteUser" parameterType="User">
        delete
        from user
        where id =
              #{id}
    </delete>
</mapper>